<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>bestfriend</artifactId>
	<packaging>war</packaging>
	<name>bestfriend Tapestry 5 Application</name>

	<parent>
		<groupId>com.kotoblog</groupId>
		<artifactId>bestfriend-parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<dependencies>

		<!-- Various Application Context utilities, including EhCache, JavaMail, 
			Quartz, and Freemarker integration Define this if you need any of these integrations 
			<dependency> <groupId>org.springframework</groupId> <artifactId>spring-context-support</artifactId> 
			<version>${spring-release-version}</version> </dependency> -->

		<!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB, 
			JiBX, Castor, XStream, and XML Beans. (depends on spring-core, spring-beans, 
			spring-context) Define this if you need OXM (org.springframework.oxm.*) <dependency> 
			<groupId>org.springframework</groupId> <artifactId>spring-oxm</artifactId> 
			<version>${spring-release-version}</version> </dependency> -->

		<!-- Web application development utilities applicable to both Servlet and 
			Portlet Environments (depends on spring-core, spring-beans, spring-context) 
			Define this if you use Spring MVC, or wish to use Struts, JSF, or another 
			web framework with Spring (org.springframework.web.*) <dependency> <groupId>org.springframework</groupId> 
			<artifactId>spring-web</artifactId> <version>${spring-release-version}</version> 
			</dependency> -->

		<!-- Spring MVC for Servlet Environments (depends on spring-core, spring-beans, 
			spring-context, spring-web) Define this if you use Spring MVC with a Servlet 
			Container such as Apache Tomcat (org.springframework.web.servlet.*) <dependency> 
			<groupId>org.springframework</groupId> <artifactId>spring-webmvc</artifactId> 
			<version>${spring-release-version}</version> </dependency> -->

		<!-- Spring JMS -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jms</artifactId>
			<version>${spring-release-version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.tapestry</groupId>
			<artifactId>tapestry-spring</artifactId>
			<version>${tapestry-release-version}</version>
		</dependency>

		<!-- Patch path for Tapestry 5 + Jboss 7 -->
		<dependency>
			<groupId>org.jboss</groupId>
			<artifactId>jboss-vfs</artifactId>
			<version>3.0.1.GA</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-core</artifactId>
			<version>${camel-release-version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spring</artifactId>
			<version>${camel-release-version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-jms</artifactId>
			<version>${camel-release-version}</version>
		</dependency>

		<dependency>
			<groupId>org.hornetq</groupId>
			<artifactId>hornetq-core</artifactId>
			<version>${hornetq-release-version}</version>
		</dependency>
		<!-- <dependency> -->
		<!-- <groupId>org.hornetq</groupId> -->
		<!-- <artifactId>hornetq-spring-integration</artifactId> -->
		<!-- <version>${hornetq-release-version}</version> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>org.springframework</groupId> -->
		<!-- <artifactId>spring-context</artifactId> -->
		<!-- <version>${spring-release-version}</version> -->
		<!-- </dependency> -->
		<dependency>
			<groupId>org.hornetq</groupId>
			<artifactId>hornetq-jms</artifactId>
			<version>${hornetq-release-version}</version>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty</artifactId>
			<version>${netty-release-version}</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.javaee</groupId>
			<artifactId>jboss-jms-api</artifactId>
			<version>${jboss-jms-api-release-version}</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.naming</groupId>
			<artifactId>jnpserver</artifactId>
			<version>${jnpserver-release-version}</version>
		</dependency>

		<!-- This adds automatic compression of JavaScript and CSS when in production 
			mode. -->
		<dependency>
			<groupId>org.apache.tapestry</groupId>
			<artifactId>tapestry-yuicompressor</artifactId>
			<version>${tapestry-release-version}</version>
		</dependency>

		<!-- Uncomment this to add support for file uploads: <dependency> <groupId>org.apache.tapestry</groupId> 
			<artifactId>tapestry-upload</artifactId> <version>${tapestry-release-version}</version> 
			</dependency> -->

		<!-- A dependency on either JUnit or TestNG is required, or the surefire 
			plugin (which runs the tests) will fail, preventing Maven from packaging 
			the WAR. Tapestry includes a large number of testing facilities designed 
			for use with TestNG (http://testng.org/), so it's recommended. -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>${testng-release-version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>${easymock-release-version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.tapestry</groupId>
			<artifactId>tapestry-test</artifactId>
			<version>${tapestry-release-version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.tynamo</groupId>
			<artifactId>tapestry-security</artifactId>
			<version>${tapestry-security-version}</version>
		</dependency>

		<!-- Provide dependency to the Tapestry javadoc taglet which replaces the 
			Maven component report -->
		<dependency>
			<groupId>org.apache.tapestry</groupId>
			<artifactId>tapestry-javadoc</artifactId>
			<version>${tapestry-release-version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- <dependency> -->
		<!-- <groupId>org.apache.tapestry</groupId> -->
		<!-- <artifactId>tapestry-hibernate</artifactId> -->
		<!-- <version>${tapestry-release-version}</version> -->
		<!-- </dependency> -->

		<!-- Provided by the servlet container, but sometimes referenced in the 
			application code. -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>${servlet-api-release-version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- root projects -->
		<dependency>
			<groupId>com.kotoblog</groupId>
			<artifactId>parser</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>com.kotoblog</groupId>
			<artifactId>camel-routes</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>com.kotoblog</groupId>
			<artifactId>persist</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>bestfriend</finalName>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.7.2</version>
				<configuration>
					<systemPropertyVariables>
						<tapestry.execution-mode>Qa</tapestry.execution-mode>
					</systemPropertyVariables>
				</configuration>
			</plugin>

			<!-- Run the application using "mvn jetty:run" -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.16</version>
				<configuration>
					<!-- Log to the console. -->
					<requestLog implementation="org.mortbay.jetty.NCSARequestLog">
						<!-- This doesn't do anything for Jetty, but is a workaround for a 
							Maven bug that prevents the requestLog from being set. -->
						<append>true</append>
					</requestLog>
					<systemProperties>
						<systemProperty>
							<name>tapestry.execution-mode</name>
							<value>development</value>
						</systemProperty>
					</systemProperties>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<archive>
						<manifestEntries>
							<Dependencies>org.hornetq, org.jboss.netty</Dependencies>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

		</plugins>
	</build>

</project>
